{"uid":"b6f1eb71576e769f","name":"Ismételt és sorozatos adatbevitel adatforrásból - Helyes adatokkal","fullName":"vizsgaremek.test.test_conduit.TestConduit#test_import_datas_from_file","historyId":"5b6c6e492fce2c4347b263d01999f961","time":{"start":1680899877319,"stop":1680899943444,"duration":66125},"status":"broken","statusMessage":"selenium.common.exceptions.TimeoutException: Message: \nStacktrace:\n#0 0x55d73ce68243 <unknown>\n#1 0x55d73cc2c7a6 <unknown>\n#2 0x55d73cc6964d <unknown>\n#3 0x55d73cc69761 <unknown>\n#4 0x55d73cca4da4 <unknown>\n#5 0x55d73cc8a0ad <unknown>\n#6 0x55d73cca2932 <unknown>\n#7 0x55d73cc89e53 <unknown>\n#8 0x55d73cc5c9ea <unknown>\n#9 0x55d73cc5db2e <unknown>\n#10 0x55d73cebcd5e <unknown>\n#11 0x55d73cec0a80 <unknown>\n#12 0x55d73cea28b0 <unknown>\n#13 0x55d73cec1b63 <unknown>\n#14 0x55d73ce93f75 <unknown>\n#15 0x55d73cee4998 <unknown>\n#16 0x55d73cee4b27 <unknown>\n#17 0x55d73ceffc23 <unknown>\n#18 0x7f66b45deb43 <unknown>","statusTrace":"self = <test_conduit.TestConduit object at 0x7f9ccb003b50>\n\n    @allure.id('TC7')\n    @allure.title('Ismételt és sorozatos adatbevitel adatforrásból - Helyes adatokkal')\n    def test_import_datas_from_file(self):\n        independent_cookies_accept(self.browser)\n        independent_login(self.browser)\n    \n        input_article_titles = []\n        with open('./datas_for_conduit.csv', 'r') as datas:\n            data_reader = csv.reader(datas, delimiter=';')\n            for data in data_reader:\n                btn_new_articel = WebDriverWait(self.browser, 5).until(\n                    EC.presence_of_element_located((By.XPATH, '//a[@href=\"#/editor\"]')))\n                btn_new_articel.click()\n                time.sleep(5)\n    \n                input_article_title = WebDriverWait(self.browser, 5).until(\n                    EC.presence_of_element_located((By.XPATH, '//input[@class=\"form-control form-control-lg\"]')))\n                input_article_about = self.browser.find_element(By.XPATH, '//input[@class=\"form-control\"]')\n                input_article = self.browser.find_element(By.XPATH, '//textarea[@class=\"form-control\"]')\n                input_article_tag = self.browser.find_element(By.XPATH, '//input[@placeholder=\"Enter tags\"]')\n    \n                input_article_title.send_keys(data[0])\n                input_article_about.send_keys(data[1])\n                input_article.send_keys(data[2])\n                input_article_tag.send_keys(data[3])\n    \n                input_article_titles.append(data[0])\n    \n                btn_publish = self.browser.find_element(By.XPATH, '//button[@type=\"submit\"]')\n                btn_publish.click()\n                time.sleep(5)\n    \n                self.article_counter += 1\n    \n                actual_article_title = WebDriverWait(self.browser, 5).until(\n                    EC.presence_of_element_located((By.TAG_NAME, 'h1')))\n                actual_article_author = self.browser.find_element(By.XPATH, '//a[@class=\"author\"]')\n                actual_article = self.browser.find_element(By.TAG_NAME, 'p')\n                actual_article_tags = self.browser.find_element(By.XPATH, '//div[@class=\"tag-list\"]')\n                btn_post_comment = self.browser.find_element(By.XPATH, '//button[@class=\"btn btn-sm btn-primary\"]')\n    \n                assert actual_article_title.text == data[0]\n                assert actual_article_author.text == sign_up_user[\"username\"]\n                assert actual_article.text == data[2]\n                assert actual_article_tags.text == data[3]\n                assert btn_post_comment.is_enabled()\n    \n        # print(input_article_titles)\n    \n        # btn_menu_logged_in_user = \\\n        # WebDriverWait(self.browser, 5).until(EC.presence_of_all_elements_located((By.XPATH, '//a[@class=\"nav-link\"]')))[\n        #     3]\n        time.sleep(5)\n>       btn_menu_logged_in_user = WebDriverWait(self.browser, 5).until(EC.presence_of_element_located((By.XPATH, f'//a[@href=\"#/@{sign_up_user[\"username\"]}\"]')))\n\nvizsgaremek/test/test_conduit.py:265: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nself = <selenium.webdriver.support.wait.WebDriverWait (session=\"0bcbae80c5be4dee3379edebcab9ab69\")>\nmethod = <function presence_of_element_located.<locals>._predicate at 0x7f9ccaf18af0>\nmessage = ''\n\n    def until(self, method, message: str = \"\"):\n        \"\"\"Calls the method provided with the driver as an argument until the \\\n        return value does not evaluate to ``False``.\n    \n        :param method: callable(WebDriver)\n        :param message: optional message for :exc:`TimeoutException`\n        :returns: the result of the last call to `method`\n        :raises: :exc:`selenium.common.exceptions.TimeoutException` if timeout occurs\n        \"\"\"\n        screen = None\n        stacktrace = None\n    \n        end_time = time.monotonic() + self._timeout\n        while True:\n            try:\n                value = method(self._driver)\n                if value:\n                    return value\n            except self._ignored_exceptions as exc:\n                screen = getattr(exc, \"screen\", None)\n                stacktrace = getattr(exc, \"stacktrace\", None)\n            time.sleep(self._poll)\n            if time.monotonic() > end_time:\n                break\n>       raise TimeoutException(message, screen, stacktrace)\nE       selenium.common.exceptions.TimeoutException: Message: \nE       Stacktrace:\nE       #0 0x55d73ce68243 <unknown>\nE       #1 0x55d73cc2c7a6 <unknown>\nE       #2 0x55d73cc6964d <unknown>\nE       #3 0x55d73cc69761 <unknown>\nE       #4 0x55d73cca4da4 <unknown>\nE       #5 0x55d73cc8a0ad <unknown>\nE       #6 0x55d73cca2932 <unknown>\nE       #7 0x55d73cc89e53 <unknown>\nE       #8 0x55d73cc5c9ea <unknown>\nE       #9 0x55d73cc5db2e <unknown>\nE       #10 0x55d73cebcd5e <unknown>\nE       #11 0x55d73cec0a80 <unknown>\nE       #12 0x55d73cea28b0 <unknown>\nE       #13 0x55d73cec1b63 <unknown>\nE       #14 0x55d73ce93f75 <unknown>\nE       #15 0x55d73cee4998 <unknown>\nE       #16 0x55d73cee4b27 <unknown>\nE       #17 0x55d73ceffc23 <unknown>\nE       #18 0x7f66b45deb43 <unknown>\n\n/opt/hostedtoolcache/Python/3.10.10/x64/lib/python3.10/site-packages/selenium/webdriver/support/wait.py:95: TimeoutException","flaky":false,"newFailed":false,"newBroken":false,"newPassed":false,"retriesCount":0,"retriesStatusChange":false,"beforeStages":[{"name":"_xunit_setup_method_fixture_TestConduit","time":{"start":1680899875947,"stop":1680899877318,"duration":1371},"status":"passed","steps":[],"attachments":[],"parameters":[],"stepsCount":0,"attachmentsCount":0,"shouldDisplayMessage":false,"hasContent":false}],"afterStages":[{"name":"_xunit_setup_method_fixture_TestConduit::0","time":{"start":1680899943506,"stop":1680899943506,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"stepsCount":0,"attachmentsCount":0,"shouldDisplayMessage":false,"hasContent":false}],"labels":[{"name":"as_id","value":"TC7"},{"name":"parentSuite","value":"vizsgaremek.test"},{"name":"suite","value":"test_conduit"},{"name":"subSuite","value":"TestConduit"},{"name":"host","value":"fv-az572-578"},{"name":"thread","value":"3125-MainThread"},{"name":"framework","value":"pytest"},{"name":"language","value":"cpython3"},{"name":"package","value":"vizsgaremek.test.test_conduit"},{"name":"resultFormat","value":"allure2"}],"parameters":[],"links":[],"hidden":false,"retry":false,"extra":{"severity":"normal","retries":[],"categories":[{"name":"Test defects","matchedStatuses":[],"flaky":false}],"tags":[]},"source":"b6f1eb71576e769f.json","parameterValues":[]}