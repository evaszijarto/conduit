{"uid":"2edbed01c17d4a7d","name":"Adat vagy adatok törlése (blogbejegyzés","fullName":"vizsgaremek.test.test_conduit.TestConduit#test_delete_data","historyId":"3546b87383dadcc3d34b1c8d82f813de","time":{"start":1681294916151,"stop":1681294927012,"duration":10861},"description":"\n    Teszteset leírás:\n        Másik modulból meghívott függvények: \n            - adatkezelési nyilatkozat elfogadása\n            - bejelentkezés megadott felhasználóval\n            - felhasználói menübe navigálás (home oldalról)\n        Függvény válozó létrehozása a törlés előtt meglévő felhasználóhoz taroztó blogbejegyzések címének eltárolásához.\n        A felhasználóhoz tartozó bejegyzések címeinek kikeresése.\n        A címek számának eltárolása egy függvény vátlozóba.\n        For ciklus segítségével a törlsé előtti start állapot szerinti bejegyzés címek tárolására létrehozott függvény változó feltöltése.\n        Törölni kívánt blogbejegyzés megkeresése (külső adatforrás segítségévle) és megjelenítése.\n        Blogbejegyzés törlése gomb megkeresése és megnyomása\n        Felhasználó által létrehozott blogbejegyzések számolásához létrehozott osztályváltozó értékének 1-gyel történő csökkentése.\n        Felhasználói menübe navigálás\n        Függvény válozó létrehozása a törlés utáni felhasználóhoz taroztó blogbejegyzések címének eltárolásához.\n        A törlés után a felhasználóhoz tartozó bejegyzések címeinek kikeresése.\n        A törlés után a címek számának eltárolása egy függvény változóba.\n        For ciklus segítségével a törlsé utáni állapot szerinti bejegyzés címek tárolására létrehozott függvény változó feltöltése.\n    Vizgálatok leírása:\n        - törlés előtt:\n            < az oldalon a felhasználóhoz tartozó blogbejegyzések címeinek száma megegyezik a felhasználó által létrehozott blogbejegyzések osztályváltozóban tárolt értékével\n            < a függvény változóban eltárolt blogbejegyzés címek lista elemei szerepelnek a felhasználói menüpont alatt megjelenő felhasználóhoz tartozó bejegyzések címeinek listájában\n        - törlés után:\n            < a törlés utáni felhasználóhoz taroztó cikkek száma megegyezik a törlés előtti felhasználóhoz tartozó cikkek számának eggyel csökkentett értékével\n            < a törlés utáni felhasználóhoz taroztó cikkek száma megegyezik a felhasználó által létrehozott blogbejegyzések osztályváltozóban tárolt értékével\n            < törölt blogbejegyzés címe nem szerepel a törlés utáni felhasználóhoz tartozó cikkek címének listájában\n    ","descriptionHtml":"<pre><code>Teszteset leírás:\n    Másik modulból meghívott függvények: \n        - adatkezelési nyilatkozat elfogadása\n        - bejelentkezés megadott felhasználóval\n        - felhasználói menübe navigálás (home oldalról)\n    Függvény válozó létrehozása a törlés előtt meglévő felhasználóhoz taroztó blogbejegyzések címének eltárolásához.\n    A felhasználóhoz tartozó bejegyzések címeinek kikeresése.\n    A címek számának eltárolása egy függvény vátlozóba.\n    For ciklus segítségével a törlsé előtti start állapot szerinti bejegyzés címek tárolására létrehozott függvény változó feltöltése.\n    Törölni kívánt blogbejegyzés megkeresése (külső adatforrás segítségévle) és megjelenítése.\n    Blogbejegyzés törlése gomb megkeresése és megnyomása\n    Felhasználó által létrehozott blogbejegyzések számolásához létrehozott osztályváltozó értékének 1-gyel történő csökkentése.\n    Felhasználói menübe navigálás\n    Függvény válozó létrehozása a törlés utáni felhasználóhoz taroztó blogbejegyzések címének eltárolásához.\n    A törlés után a felhasználóhoz tartozó bejegyzések címeinek kikeresése.\n    A törlés után a címek számának eltárolása egy függvény változóba.\n    For ciklus segítségével a törlsé utáni állapot szerinti bejegyzés címek tárolására létrehozott függvény változó feltöltése.\nVizgálatok leírása:\n    - törlés előtt:\n        &lt; az oldalon a felhasználóhoz tartozó blogbejegyzések címeinek száma megegyezik a felhasználó által létrehozott blogbejegyzések osztályváltozóban tárolt értékével\n        &lt; a függvény változóban eltárolt blogbejegyzés címek lista elemei szerepelnek a felhasználói menüpont alatt megjelenő felhasználóhoz tartozó bejegyzések címeinek listájában\n    - törlés után:\n        &lt; a törlés utáni felhasználóhoz taroztó cikkek száma megegyezik a törlés előtti felhasználóhoz tartozó cikkek számának eggyel csökkentett értékével\n        &lt; a törlés utáni felhasználóhoz taroztó cikkek száma megegyezik a felhasználó által létrehozott blogbejegyzések osztályváltozóban tárolt értékével\n        &lt; törölt blogbejegyzés címe nem szerepel a törlés utáni felhasználóhoz tartozó cikkek címének listájában\n</code></pre>\n","status":"broken","statusMessage":"TypeError: logged_in_user_site_from_home() missing 1 required positional argument: 'browser'","statusTrace":"self = <test_conduit.TestConduit object at 0x7fe2f5a76ce0>\n\n    @allure.id('TC9')\n    @allure.title('Adat vagy adatok törlése (blogbejegyzés')\n    @allure.description('''\n    Teszteset leírás:\n        Másik modulból meghívott függvények:\n            - adatkezelési nyilatkozat elfogadása\n            - bejelentkezés megadott felhasználóval\n            - felhasználói menübe navigálás (home oldalról)\n        Függvény válozó létrehozása a törlés előtt meglévő felhasználóhoz taroztó blogbejegyzések címének eltárolásához.\n        A felhasználóhoz tartozó bejegyzések címeinek kikeresése.\n        A címek számának eltárolása egy függvény vátlozóba.\n        For ciklus segítségével a törlsé előtti start állapot szerinti bejegyzés címek tárolására létrehozott függvény változó feltöltése.\n        Törölni kívánt blogbejegyzés megkeresése (külső adatforrás segítségévle) és megjelenítése.\n        Blogbejegyzés törlése gomb megkeresése és megnyomása\n        Felhasználó által létrehozott blogbejegyzések számolásához létrehozott osztályváltozó értékének 1-gyel történő csökkentése.\n        Felhasználói menübe navigálás\n        Függvény válozó létrehozása a törlés utáni felhasználóhoz taroztó blogbejegyzések címének eltárolásához.\n        A törlés után a felhasználóhoz tartozó bejegyzések címeinek kikeresése.\n        A törlés után a címek számának eltárolása egy függvény változóba.\n        For ciklus segítségével a törlsé utáni állapot szerinti bejegyzés címek tárolására létrehozott függvény változó feltöltése.\n    Vizgálatok leírása:\n        - törlés előtt:\n            < az oldalon a felhasználóhoz tartozó blogbejegyzések címeinek száma megegyezik a felhasználó által létrehozott blogbejegyzések osztályváltozóban tárolt értékével\n            < a függvény változóban eltárolt blogbejegyzés címek lista elemei szerepelnek a felhasználói menüpont alatt megjelenő felhasználóhoz tartozó bejegyzések címeinek listájában\n        - törlés után:\n            < a törlés utáni felhasználóhoz taroztó cikkek száma megegyezik a törlés előtti felhasználóhoz tartozó cikkek számának eggyel csökkentett értékével\n            < a törlés utáni felhasználóhoz taroztó cikkek száma megegyezik a felhasználó által létrehozott blogbejegyzések osztályváltozóban tárolt értékével\n            < törölt blogbejegyzés címe nem szerepel a törlés utáni felhasználóhoz tartozó cikkek címének listájában\n    ''')\n    def test_delete_data(self):\n        independent_cookies_accept(self.browser)\n        independent_login(self.browser)\n        logged_in_user_site_from_home(self.browser)\n    \n        start_article_titles = []\n        start_article_elements = WebDriverWait(self.browser, 5).until(\n            EC.presence_of_all_elements_located((By.XPATH, '//h1')))\n        start_number_of_article = len(start_article_elements)\n        # for article in start_article_elements:\n        #     start_article_titles.append(article.text)\n        list_upload(start_article_elements, start_article_titles)\n        assert start_number_of_article == TestConduit.article_counter\n        assert new_article_data[\"article_title\"] in start_article_titles\n        delete_article = WebDriverWait(self.browser, 5).until(\n            EC.presence_of_element_located((By.XPATH, f'//h1[text()=\"{new_article_data[\"article_title\"]}\"]')))\n        TestConduit.article_counter -= 1\n        delete_article.click()\n        time.sleep(2)\n    \n        btn_delete_article = WebDriverWait(self.browser, 5).until(\n            EC.presence_of_element_located((By.XPATH, '//button[@class=\"btn btn-outline-danger btn-sm\"]')))\n        btn_delete_article.click()\n        time.sleep(2)\n    \n>       logged_in_user_site_from_home()\nE       TypeError: logged_in_user_site_from_home() missing 1 required positional argument: 'browser'\n\nvizsgaremek/test/test_conduit.py:478: TypeError","flaky":false,"newFailed":false,"newBroken":false,"newPassed":false,"retriesCount":0,"retriesStatusChange":false,"beforeStages":[{"name":"_xunit_setup_method_fixture_TestConduit","time":{"start":1681294914898,"stop":1681294916150,"duration":1252},"status":"passed","steps":[],"attachments":[],"parameters":[],"attachmentsCount":0,"shouldDisplayMessage":false,"hasContent":false,"stepsCount":0}],"afterStages":[{"name":"_xunit_setup_method_fixture_TestConduit::0","time":{"start":1681294927064,"stop":1681294927121,"duration":57},"status":"passed","steps":[],"attachments":[],"parameters":[],"attachmentsCount":0,"shouldDisplayMessage":false,"hasContent":false,"stepsCount":0}],"labels":[{"name":"as_id","value":"TC9"},{"name":"parentSuite","value":"vizsgaremek.test"},{"name":"suite","value":"test_conduit"},{"name":"subSuite","value":"TestConduit"},{"name":"host","value":"fv-az575-709"},{"name":"thread","value":"3039-MainThread"},{"name":"framework","value":"pytest"},{"name":"language","value":"cpython3"},{"name":"package","value":"vizsgaremek.test.test_conduit"},{"name":"resultFormat","value":"allure2"}],"parameters":[],"links":[],"hidden":false,"retry":false,"extra":{"severity":"normal","retries":[],"categories":[{"name":"Test defects","matchedStatuses":[],"flaky":false}],"tags":[]},"source":"2edbed01c17d4a7d.json","parameterValues":[]}