{"uid":"9183f9ea0b02d419","name":"Ismételt és sorozatos adatbevitel adatforrásból - Helyes adatokkal","fullName":"vizsgaremek.test.test_conduit.TestConduit#test_import_datas_from_file","historyId":"5b6c6e492fce2c4347b263d01999f961","time":{"start":1680902055108,"stop":1680902119120,"duration":64012},"status":"failed","statusMessage":"AssertionError: assert 'Aenean ac dapibus libero.' in ['Duis venenatis ullamcorper felis sed cursus', 'Quisque pharetra felis et felis bibendum', 'Praesent dictum lacus et nisi hendrerit suscipit', 'Donec quis ipsum turpis', 'Aenean sit amet ex pulvinar']\n +  where 'Aenean ac dapibus libero.' = <selenium.webdriver.remote.webelement.WebElement (session=\"6879c16076990c2e6c752e118bda741b\", element=\"02ac174f-b486-48ce-b8af-f55489880659\")>.text","statusTrace":"self = <test_conduit.TestConduit object at 0x7f32ae64bb50>\n\n    @allure.id('TC7')\n    @allure.title('Ismételt és sorozatos adatbevitel adatforrásból - Helyes adatokkal')\n    def test_import_datas_from_file(self):\n        independent_cookies_accept(self.browser)\n        independent_login(self.browser)\n    \n        input_article_titles = []\n        print(self.article_counter)\n        with open('./vizsgaremek/test/datas_for_conduit.csv', 'r') as datas:\n            data_reader = csv.reader(datas, delimiter=';')\n            for data in data_reader:\n                btn_new_articel = WebDriverWait(self.browser, 5).until(\n                    EC.presence_of_element_located((By.XPATH, '//a[@href=\"#/editor\"]')))\n                btn_new_articel.click()\n                time.sleep(5)\n    \n                input_article_title = WebDriverWait(self.browser, 5).until(\n                    EC.presence_of_element_located((By.XPATH, '//input[@class=\"form-control form-control-lg\"]')))\n                input_article_about = self.browser.find_element(By.XPATH, '//input[@class=\"form-control\"]')\n                input_article = self.browser.find_element(By.XPATH, '//textarea[@class=\"form-control\"]')\n                input_article_tag = self.browser.find_element(By.XPATH, '//input[@placeholder=\"Enter tags\"]')\n    \n                input_article_title.send_keys(data[0])\n                input_article_about.send_keys(data[1])\n                input_article.send_keys(data[2])\n                input_article_tag.send_keys(data[3])\n    \n                input_article_titles.append(data[0])\n    \n                btn_publish = self.browser.find_element(By.XPATH, '//button[@type=\"submit\"]')\n                btn_publish.click()\n                time.sleep(5)\n    \n                TestConduit.article_counter += 1\n                print(TestConduit.article_counter)\n    \n                actual_article_title = WebDriverWait(self.browser, 5).until(\n                    EC.presence_of_element_located((By.TAG_NAME, 'h1')))\n                actual_article_author = self.browser.find_element(By.XPATH, '//a[@class=\"author\"]')\n                actual_article = self.browser.find_element(By.TAG_NAME, 'p')\n                actual_article_tags = self.browser.find_element(By.XPATH, '//div[@class=\"tag-list\"]')\n                btn_post_comment = self.browser.find_element(By.XPATH, '//button[@class=\"btn btn-sm btn-primary\"]')\n    \n                assert actual_article_title.text == data[0]\n                assert actual_article_author.text == sign_up_user[\"username\"]\n                assert actual_article.text == data[2]\n                assert actual_article_tags.text == data[3]\n                assert btn_post_comment.is_enabled()\n    \n        # print(input_article_titles)\n    \n        time.sleep(5)\n        # btn_menu_logged_in_user = WebDriverWait(self.browser, 5).until(EC.presence_of_all_elements_located((By.XPATH, '//a[@class=\"nav-link\"]')))[3]\n        # btn_menu_logged_in_user = WebDriverWait(self.browser, 5).until(EC.presence_of_element_located((By.XPATH, f'//a[@href=\"#/@{sign_up_user[\"username\"]}\"]')))\n        # btn_menu_logged_in_user.click()\n        btn_article_author = WebDriverWait(self.browser, 5).until(EC.presence_of_element_located((By.XPATH, '//a[@class=\"author\"]')))\n        btn_article_author.click()\n        time.sleep(5)\n    \n        actual_article_elements = WebDriverWait(self.browser, 5).until(EC.presence_of_all_elements_located((By.TAG_NAME, \"h1\")))\n        assert len(actual_article_elements) == TestConduit.article_counter\n    \n        for article in actual_article_elements:\n>           assert article.text in input_article_titles\nE           assert 'Aenean ac dapibus libero.' in ['Duis venenatis ullamcorper felis sed cursus', 'Quisque pharetra felis et felis bibendum', 'Praesent dictum lacus et nisi hendrerit suscipit', 'Donec quis ipsum turpis', 'Aenean sit amet ex pulvinar']\nE            +  where 'Aenean ac dapibus libero.' = <selenium.webdriver.remote.webelement.WebElement (session=\"6879c16076990c2e6c752e118bda741b\", element=\"02ac174f-b486-48ce-b8af-f55489880659\")>.text\n\nvizsgaremek/test/test_conduit.py:276: AssertionError","flaky":false,"newFailed":false,"newBroken":false,"newPassed":false,"retriesCount":0,"retriesStatusChange":false,"beforeStages":[{"name":"_xunit_setup_method_fixture_TestConduit","time":{"start":1680902053930,"stop":1680902055108,"duration":1178},"status":"passed","steps":[],"attachments":[],"parameters":[],"stepsCount":0,"attachmentsCount":0,"shouldDisplayMessage":false,"hasContent":false}],"testStage":{"status":"failed","statusMessage":"AssertionError: assert 'Aenean ac dapibus libero.' in ['Duis venenatis ullamcorper felis sed cursus', 'Quisque pharetra felis et felis bibendum', 'Praesent dictum lacus et nisi hendrerit suscipit', 'Donec quis ipsum turpis', 'Aenean sit amet ex pulvinar']\n +  where 'Aenean ac dapibus libero.' = <selenium.webdriver.remote.webelement.WebElement (session=\"6879c16076990c2e6c752e118bda741b\", element=\"02ac174f-b486-48ce-b8af-f55489880659\")>.text","statusTrace":"self = <test_conduit.TestConduit object at 0x7f32ae64bb50>\n\n    @allure.id('TC7')\n    @allure.title('Ismételt és sorozatos adatbevitel adatforrásból - Helyes adatokkal')\n    def test_import_datas_from_file(self):\n        independent_cookies_accept(self.browser)\n        independent_login(self.browser)\n    \n        input_article_titles = []\n        print(self.article_counter)\n        with open('./vizsgaremek/test/datas_for_conduit.csv', 'r') as datas:\n            data_reader = csv.reader(datas, delimiter=';')\n            for data in data_reader:\n                btn_new_articel = WebDriverWait(self.browser, 5).until(\n                    EC.presence_of_element_located((By.XPATH, '//a[@href=\"#/editor\"]')))\n                btn_new_articel.click()\n                time.sleep(5)\n    \n                input_article_title = WebDriverWait(self.browser, 5).until(\n                    EC.presence_of_element_located((By.XPATH, '//input[@class=\"form-control form-control-lg\"]')))\n                input_article_about = self.browser.find_element(By.XPATH, '//input[@class=\"form-control\"]')\n                input_article = self.browser.find_element(By.XPATH, '//textarea[@class=\"form-control\"]')\n                input_article_tag = self.browser.find_element(By.XPATH, '//input[@placeholder=\"Enter tags\"]')\n    \n                input_article_title.send_keys(data[0])\n                input_article_about.send_keys(data[1])\n                input_article.send_keys(data[2])\n                input_article_tag.send_keys(data[3])\n    \n                input_article_titles.append(data[0])\n    \n                btn_publish = self.browser.find_element(By.XPATH, '//button[@type=\"submit\"]')\n                btn_publish.click()\n                time.sleep(5)\n    \n                TestConduit.article_counter += 1\n                print(TestConduit.article_counter)\n    \n                actual_article_title = WebDriverWait(self.browser, 5).until(\n                    EC.presence_of_element_located((By.TAG_NAME, 'h1')))\n                actual_article_author = self.browser.find_element(By.XPATH, '//a[@class=\"author\"]')\n                actual_article = self.browser.find_element(By.TAG_NAME, 'p')\n                actual_article_tags = self.browser.find_element(By.XPATH, '//div[@class=\"tag-list\"]')\n                btn_post_comment = self.browser.find_element(By.XPATH, '//button[@class=\"btn btn-sm btn-primary\"]')\n    \n                assert actual_article_title.text == data[0]\n                assert actual_article_author.text == sign_up_user[\"username\"]\n                assert actual_article.text == data[2]\n                assert actual_article_tags.text == data[3]\n                assert btn_post_comment.is_enabled()\n    \n        # print(input_article_titles)\n    \n        time.sleep(5)\n        # btn_menu_logged_in_user = WebDriverWait(self.browser, 5).until(EC.presence_of_all_elements_located((By.XPATH, '//a[@class=\"nav-link\"]')))[3]\n        # btn_menu_logged_in_user = WebDriverWait(self.browser, 5).until(EC.presence_of_element_located((By.XPATH, f'//a[@href=\"#/@{sign_up_user[\"username\"]}\"]')))\n        # btn_menu_logged_in_user.click()\n        btn_article_author = WebDriverWait(self.browser, 5).until(EC.presence_of_element_located((By.XPATH, '//a[@class=\"author\"]')))\n        btn_article_author.click()\n        time.sleep(5)\n    \n        actual_article_elements = WebDriverWait(self.browser, 5).until(EC.presence_of_all_elements_located((By.TAG_NAME, \"h1\")))\n        assert len(actual_article_elements) == TestConduit.article_counter\n    \n        for article in actual_article_elements:\n>           assert article.text in input_article_titles\nE           assert 'Aenean ac dapibus libero.' in ['Duis venenatis ullamcorper felis sed cursus', 'Quisque pharetra felis et felis bibendum', 'Praesent dictum lacus et nisi hendrerit suscipit', 'Donec quis ipsum turpis', 'Aenean sit amet ex pulvinar']\nE            +  where 'Aenean ac dapibus libero.' = <selenium.webdriver.remote.webelement.WebElement (session=\"6879c16076990c2e6c752e118bda741b\", element=\"02ac174f-b486-48ce-b8af-f55489880659\")>.text\n\nvizsgaremek/test/test_conduit.py:276: AssertionError","steps":[],"attachments":[{"uid":"51b43254267f81d","name":"stdout","source":"51b43254267f81d.txt","type":"text/plain","size":12}],"parameters":[],"stepsCount":0,"attachmentsCount":1,"shouldDisplayMessage":true,"hasContent":true},"afterStages":[{"name":"_xunit_setup_method_fixture_TestConduit::0","time":{"start":1680902119162,"stop":1680902119162,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"stepsCount":0,"attachmentsCount":0,"shouldDisplayMessage":false,"hasContent":false}],"labels":[{"name":"as_id","value":"TC7"},{"name":"parentSuite","value":"vizsgaremek.test"},{"name":"suite","value":"test_conduit"},{"name":"subSuite","value":"TestConduit"},{"name":"host","value":"fv-az306-245"},{"name":"thread","value":"3112-MainThread"},{"name":"framework","value":"pytest"},{"name":"language","value":"cpython3"},{"name":"package","value":"vizsgaremek.test.test_conduit"},{"name":"resultFormat","value":"allure2"}],"parameters":[],"links":[],"hidden":false,"retry":false,"extra":{"severity":"normal","retries":[],"categories":[{"name":"Product defects","matchedStatuses":[],"flaky":false}],"tags":[]},"source":"9183f9ea0b02d419.json","parameterValues":[]}